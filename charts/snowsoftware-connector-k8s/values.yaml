# Snow Software values for k8s connector

# The secret key generated when creating a new connector.
secretKey:

# Use existing secret key instead of creating a new secret. If set, this overrides the secretKey value.
# The name of the secret key from your secrets management tool.
existingSecretKey:

# Use existing certificates instead of the generated ones.
# All certificates must have entries for tls.crt and tls.key.
existingAgentCertificate:          # The name of the existing agent certificate in your secrets management tool.
existingAggregatorCertificate:     # The name of the existing aggregator certificate in your secrets management tool.
existingMQCertificate:             # The name of the existing message queue certificate in your secrets management tool.

aggregator:
  name:                  # If provided, this overrides the name of the aggregator.
  repository: ghcr.io/snowsoftwareglobal/snow-aggregator
  tag:        0.9.10
  imagePullPolicy: IfNotPresent
  replicas: 3            # How many replicas to deploy.
  ingressEnabled: true   # If enabled, a NetworkPolicy is created, restricting all communication to internal services only.
  imagePullSecrets: []
    #   - name: "<REG_SECRET>"

  # Additional labels to apply to the aggregator deployment and aggregator deployment template
  #   label1: value1
  labels: {}
  templateLabels: {}

  # Additional environment variables
  additionalEnvironmentVars:
  #  - name: "VARNAME"
  #    value: "VARVALUE"
  #  - name: "VARNAME2"
  #    value: "VARVALUE2"

  # Resources for the aggregator
  resources: 
    requests:
      cpu: 300m
      memory: 100M
    limits:
      memory: 250M

  nodeSelector: {}

  ## Ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity
  affinity: {}
  tolerations: []


service:
  name:             # If provided, this overrides the name of the service.
  headlessName:     # If provided, this overrides the name of the headless service.

agent:
  name:              # If provided this will override the name of the agent.
  repository: ghcr.io/snowsoftwareglobal/snow-agent
  tag: 0.9.10-linux
  imagePullPolicy: IfNotPresent
  accountName:       # If provided, this overrides the name of the account to create.
  clusterRole:
    name:            # If provided, this overrides the name of the cluster role to create.
  clusterRoleBinding:
    name:            # If provided, this overrides the name of the cluster role binding to create.
  # Additional labels to apply to the agent DaemonSet
  #   label1: value1
  labels: {}
  templateLabels: {}

  # Additional environment variables
  additionalEnvironmentVars:
  #  - name: "VARNAME"
  #    value: "VARVALUE"
  #  - name: "VARNAME2"
  #    value: "VARVALUE2"

  # Resources for the agent
  resources: 
    requests:
      cpu: 100m
      memory: 50M
    limits:
      memory: 250M

  imagePullSecrets: []
  #   - name: "<REG_SECRET>"

  nodeSelector: {}

  ## Ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity
  affinity: {}
  tolerations: []

messageQueue:
  name:             # If provided, this overrides the name of the message queue.
  repository: ghcr.io/snowsoftwareglobal/snow-nsqd
  tag: 1.0.0
  imagePullPolicy: IfNotPresent
  # Resources for the messageQueue
  resources: 
    requests:
      cpu: 300m
      memory: 100M
    limits:
      memory: 250M
